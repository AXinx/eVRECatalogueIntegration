version: '3.1'

services:
    zookeeper:
        image: zookeeper
        deploy:
            restart_policy:
                condition: on-failure            
                
    rabbit:
        image: rabbitmq:3-management
        deploy:
            restart_policy:
                condition: on-failure      
        ports:
            - 15672:15672         
            - 5672:5672
            - 4369:4369
            - 5671:5671
            -15671:15671
                                
    rest-cat:
        image: rest-cat
        deploy:
            restart_policy:
                condition: on-failure
        environment:
            RABBIT_HOST: rabbit
            RABBIT_PORT: 5672
            RABBIT_USERNAME: guest
            RABBIT_PASSWORD: guest
            INFLUX_URI: http://influx:8086
            ZOOKEEPER_CONNECT_STRING: zookeeper:2181
        ports:
            - 8083:8080      
        depends_on:
            - zookeeper
            - rabbit          
            - influx          
            
    cat-worker:
        image: cat-worker
        deploy:
            restart_policy:
                condition: on-failure                
        environment:
            RABBIT_HOST: rabbit
            RABBIT_PORT: 5672
            RABBIT_USERNAME: guest
            RABBIT_PASSWORD: guest
            ZOOKEEPER_HOST: zookeeper
            INFLUX_URI: http://influx:8086
            FTP_HOST: ftp
            FTP_USER_NAME: user
            FTP_USER_PASS: resu      
        depends_on:
            - zookeeper
            - rabbit   
            - ftp
             
    cat-analyser:
        image: cat-analyser
        deploy:
            restart_policy:
                condition: on-failure                
        environment:
            FTP_HOST: ftp
            FTP_USER_NAME: user
            FTP_USER_PASS: resu      
        depends_on:
            - ftp              

    ftp:
        image: stilliard/pure-ftpd:hardened
        ports:
            - 21:21
            - 30000-30009:30000-30009
        environment:
            FTP_USER_NAME: user
            FTP_USER_PASS: resu
            FTP_USER_HOME: /home/user
        deploy:
            restart_policy:
                condition: on-failure         
            
    influx:
        image: influxdb
        environment:
            INFLUXDB_DB: mydb
        volumes:
            - influx:/var/lib/influxdb
                    
    rabbit-reporter :
        image: rabbit-reporter
        environment:
            RABBIT_HOST: rabbit
            RABBIT_PORT: 15672
            RABBIT_USERNAME: guest
            RABBIT_PASSWORD: guest
            INFLUX_HOST: influx
            INFLUX_PORT: 8086
            INFLUX_DB: mydb
            REPORT_INTERVAL: 2
        depends_on:
            - rabbit
            - influx    
            
    chronograf :
        image: chronograf
        command: chronograf --influxdb-url=http://influx:8086
        environment:
            INFLUX_HOST: influx
            INFLUX_PORT: 8086
            INFLUX_DB: mydb
        depends_on:
            - influx                
        ports:
            - 8888:8888         
                    
    cadvisor:
        image: google/cadvisor
        ports:
            - 0.0.0.0:8080:8080
        hostname: '{{.Node.ID}}'
        command: -logtostderr -docker_only -storage_driver=influxdb -storage_driver_db=mydb -storage_driver_host=influx:8086
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
        depends_on:
            - influx
        deploy:
            mode: global
                    
    kapacitor:
        image: kapacitor
        ports:
            - 9092:9092
        depends_on:
            - influx
        environment:      
            KAPACITOR_INFLUXDB_0_URLS_0: http://influx:8086                
            
                                
volumes:
  influx:
    driver: local
    