version: '3.1'

services:     
    
    rabbit:
        image: rabbitmq:3-management
        deploy:
            restart_policy:
                condition: on-failure      

    influx:
        image: influxdb
        environment:
            INFLUXDB_DB: mydb
        volumes:
            - influx:/var/lib/influxdb            
            
    cadvisor:
        image: google/cadvisor
        #ports:
            #- "8080:8080"
        hostname: '{{.Node.ID}}'
        command: -logtostderr -docker_only -storage_driver=influxdb -storage_driver_db=mydb -storage_driver_host=influx:8086
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
        depends_on:
            - influx
        deploy:
            mode: global                
            
    grafana:
        image: grafana/grafana
        environment:
            DS_NAME: "InfluxDB"
            DS_TYPE: "InfluxDB"
            DS_ACCESS: "proxy"
            DS_URL: "http://influx:8086"
            DS_DB: "mydb"
        #ports:
            #- "3000:3000"
        volumes:
            - grafana:/var/lib/grafana
        depends_on:
            - influx
        deploy:
            replicas: 1             
            
    prise:
        image: prise
        environment:
            RABBIT_HOST: "rabbit"
            RABBIT_PORT: "5672"
            RABBIT_USERNAME: "guest"
            RABBIT_PASSWORD: "guest"
            INFLUX_URI: "http://influx:8086"
        ports:
            - "8081:8091"
            
            
    pylog2prov:
        image: pylog2prov
        environment:
            RABBIT_HOST: "rabbit"
            RABBIT_PORT: "5672"
            RABBIT_USERNAME: "guest"
            RABBIT_PASSWORD: "guest"
            
    


volumes:
  influx:
